
Start : T_int T_main T_openParenthesis T_closedParanthesis block 

block :  T_openFlowerBracket block T_closedFlowerBracket
	    | stmt block
	    | stmt

stmt  : T_while T_openParenthesis expr T_closedParanthesis block


		|	if  expr ')' stmt [else if '(' expr ')' stmt ][ else stmt ]
        |  while '(' expr ')' stmt
     |  for '(' [ assg ] ';' [ expr ] ';' [ assg ] ')' stmt
	    |  return [ expr ] ';'
	    |  Assignment
	    |  Name'(' [expr { ',' expr } ] ')' ';'
	    |  ';'  
        |   expr ';'
        |   NULL
        |   cout {{'<<' expr} [<< endl]}';

expr : '~' expr
	    |     '!' expr
        |   unary expr
        |   expr unary
        |   expr Logic_op expr
	    |   expr binop expr
	    |   expr relop expr
	    |   expr bitwise_op expr
	    |   T_openParenthesis expr T_closedParanthesis
        |   T_identifier
        |   Numeric_Constants
binop :   +
	    | â€“
	    | *
	    | /
        | %

unary :     --
        |   ++

relop :   	 ==
	    |    !=
	    |    <=
	    |    <
	    |    >=
	    |    >

Logic_op :  &&
          | ||

bitwise_op :   &
            |  |
            |  ^

Assignment : dt [{Name','}]Name ';'
            |  dt Name '=' expr ';'
            |  Name '=' expr ';'

dt : int | short | byte | long | double | float | string | bool | char