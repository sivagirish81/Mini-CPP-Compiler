Terminals unused in grammar

   T_keyword
   T_type
   T_return
   T_for
   T_else
   T_InputStream
   T_OutputStream
   T_RelationalOperator
   T_LogicalOperator
   T_UnaryOperator
   T_ArithmeticOperator
   T_AssignmentOperator
   T_BitwiseOperator
   T_identifier
   T_numericConstants
   T_stringLiteral
   T_whiteSpace
   '~'
   '^'
   '&'
   '|'
   '+'
   '-'
   '*'
   '/'
   AND
   OR
   NOT
   EQ
   NOTEQ
   GTE
   LTE
   GT
   LT
   INC
   DEC


State 10 conflicts: 4 shift/reduce
State 28 conflicts: 4 shift/reduce
State 29 conflicts: 4 shift/reduce


Grammar

    0 $accept: Start $end

    1 Start: T_int T_main T_openParenthesis T_closedParanthesis T_openFlowerBracket block

    2 block: T_openFlowerBracket block
    3      | stmt Multiple_stmts T_closedFlowerBracket
    4      | T_closedFlowerBracket
    5      | %empty

    6 Multiple_stmts: stmt Multiple_stmts
    7               | %empty

    8 stmt: T_character T_Semicolon
    9     | if_stmt
   10     | while_stmt

   11 while_stmt: T_while T_openParenthesis expr T_closedParanthesis block

   12 if_stmt: T_if T_openParenthesis expr T_closedParanthesis block

   13 expr: T_character


Terminals, with rules where they appear

$end (0) 0
'&' (38)
'*' (42)
'+' (43)
'-' (45)
'/' (47)
'^' (94)
'|' (124)
'~' (126)
error (256)
T_keyword (258)
T_int (259) 1
T_main (260) 1
T_type (261)
T_return (262)
T_for (263)
T_if (264) 12
T_else (265)
T_while (266) 11
T_InputStream (267)
T_OutputStream (268)
T_openParenthesis (269) 1 11 12
T_closedParanthesis (270) 1 11 12
T_openFlowerBracket (271) 1 2
T_closedFlowerBracket (272) 3 4
T_RelationalOperator (273)
T_LogicalOperator (274)
T_UnaryOperator (275)
T_ArithmeticOperator (276)
T_AssignmentOperator (277)
T_BitwiseOperator (278)
T_Semicolon (279) 8
T_identifier (280)
T_numericConstants (281)
T_stringLiteral (282)
T_character (283) 8 13
T_whiteSpace (284)
AND (285)
OR (286)
NOT (287)
EQ (288)
NOTEQ (289)
GTE (290)
LTE (291)
GT (292)
LT (293)
INC (294)
DEC (295)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
Start (50)
    on left: 1, on right: 0
block (51)
    on left: 2 3 4 5, on right: 1 2 11 12
Multiple_stmts (52)
    on left: 6 7, on right: 3 6
stmt (53)
    on left: 8 9 10, on right: 3 6
while_stmt (54)
    on left: 11, on right: 10
if_stmt (55)
    on left: 12, on right: 9
expr (56)
    on left: 13, on right: 11 12


State 0

    0 $accept: . Start $end

    T_int  shift, and go to state 1

    Start  go to state 2


State 1

    1 Start: T_int . T_main T_openParenthesis T_closedParanthesis T_openFlowerBracket block

    T_main  shift, and go to state 3


State 2

    0 $accept: Start . $end

    $end  shift, and go to state 4


State 3

    1 Start: T_int T_main . T_openParenthesis T_closedParanthesis T_openFlowerBracket block

    T_openParenthesis  shift, and go to state 5


State 4

    0 $accept: Start $end .

    $default  accept


State 5

    1 Start: T_int T_main T_openParenthesis . T_closedParanthesis T_openFlowerBracket block

    T_closedParanthesis  shift, and go to state 6


State 6

    1 Start: T_int T_main T_openParenthesis T_closedParanthesis . T_openFlowerBracket block

    T_openFlowerBracket  shift, and go to state 7


State 7

    1 Start: T_int T_main T_openParenthesis T_closedParanthesis T_openFlowerBracket . block

    T_if                   shift, and go to state 8
    T_while                shift, and go to state 9
    T_openFlowerBracket    shift, and go to state 10
    T_closedFlowerBracket  shift, and go to state 11
    T_character            shift, and go to state 12

    $default  reduce using rule 5 (block)

    block       go to state 13
    stmt        go to state 14
    while_stmt  go to state 15
    if_stmt     go to state 16


State 8

   12 if_stmt: T_if . T_openParenthesis expr T_closedParanthesis block

    T_openParenthesis  shift, and go to state 17


State 9

   11 while_stmt: T_while . T_openParenthesis expr T_closedParanthesis block

    T_openParenthesis  shift, and go to state 18


State 10

    2 block: T_openFlowerBracket . block

    T_if                   shift, and go to state 8
    T_while                shift, and go to state 9
    T_openFlowerBracket    shift, and go to state 10
    T_closedFlowerBracket  shift, and go to state 11
    T_character            shift, and go to state 12

    T_if                   [reduce using rule 5 (block)]
    T_while                [reduce using rule 5 (block)]
    T_closedFlowerBracket  [reduce using rule 5 (block)]
    T_character            [reduce using rule 5 (block)]
    $default               reduce using rule 5 (block)

    block       go to state 19
    stmt        go to state 14
    while_stmt  go to state 15
    if_stmt     go to state 16


State 11

    4 block: T_closedFlowerBracket .

    $default  reduce using rule 4 (block)


State 12

    8 stmt: T_character . T_Semicolon

    T_Semicolon  shift, and go to state 20


State 13

    1 Start: T_int T_main T_openParenthesis T_closedParanthesis T_openFlowerBracket block .

    $default  reduce using rule 1 (Start)


State 14

    3 block: stmt . Multiple_stmts T_closedFlowerBracket

    T_if         shift, and go to state 8
    T_while      shift, and go to state 9
    T_character  shift, and go to state 12

    $default  reduce using rule 7 (Multiple_stmts)

    Multiple_stmts  go to state 21
    stmt            go to state 22
    while_stmt      go to state 15
    if_stmt         go to state 16


State 15

   10 stmt: while_stmt .

    $default  reduce using rule 10 (stmt)


State 16

    9 stmt: if_stmt .

    $default  reduce using rule 9 (stmt)


State 17

   12 if_stmt: T_if T_openParenthesis . expr T_closedParanthesis block

    T_character  shift, and go to state 23

    expr  go to state 24


State 18

   11 while_stmt: T_while T_openParenthesis . expr T_closedParanthesis block

    T_character  shift, and go to state 23

    expr  go to state 25


State 19

    2 block: T_openFlowerBracket block .

    $default  reduce using rule 2 (block)


State 20

    8 stmt: T_character T_Semicolon .

    $default  reduce using rule 8 (stmt)


State 21

    3 block: stmt Multiple_stmts . T_closedFlowerBracket

    T_closedFlowerBracket  shift, and go to state 26


State 22

    6 Multiple_stmts: stmt . Multiple_stmts

    T_if         shift, and go to state 8
    T_while      shift, and go to state 9
    T_character  shift, and go to state 12

    $default  reduce using rule 7 (Multiple_stmts)

    Multiple_stmts  go to state 27
    stmt            go to state 22
    while_stmt      go to state 15
    if_stmt         go to state 16


State 23

   13 expr: T_character .

    $default  reduce using rule 13 (expr)


State 24

   12 if_stmt: T_if T_openParenthesis expr . T_closedParanthesis block

    T_closedParanthesis  shift, and go to state 28


State 25

   11 while_stmt: T_while T_openParenthesis expr . T_closedParanthesis block

    T_closedParanthesis  shift, and go to state 29


State 26

    3 block: stmt Multiple_stmts T_closedFlowerBracket .

    $default  reduce using rule 3 (block)


State 27

    6 Multiple_stmts: stmt Multiple_stmts .

    $default  reduce using rule 6 (Multiple_stmts)


State 28

   12 if_stmt: T_if T_openParenthesis expr T_closedParanthesis . block

    T_if                   shift, and go to state 8
    T_while                shift, and go to state 9
    T_openFlowerBracket    shift, and go to state 10
    T_closedFlowerBracket  shift, and go to state 11
    T_character            shift, and go to state 12

    T_if                   [reduce using rule 5 (block)]
    T_while                [reduce using rule 5 (block)]
    T_closedFlowerBracket  [reduce using rule 5 (block)]
    T_character            [reduce using rule 5 (block)]

    block       go to state 30
    stmt        go to state 14
    while_stmt  go to state 15
    if_stmt     go to state 16


State 29

   11 while_stmt: T_while T_openParenthesis expr T_closedParanthesis . block

    T_if                   shift, and go to state 8
    T_while                shift, and go to state 9
    T_openFlowerBracket    shift, and go to state 10
    T_closedFlowerBracket  shift, and go to state 11
    T_character            shift, and go to state 12

    T_if                   [reduce using rule 5 (block)]
    T_while                [reduce using rule 5 (block)]
    T_closedFlowerBracket  [reduce using rule 5 (block)]
    T_character            [reduce using rule 5 (block)]

    block       go to state 31
    stmt        go to state 14
    while_stmt  go to state 15
    if_stmt     go to state 16


State 30

   12 if_stmt: T_if T_openParenthesis expr T_closedParanthesis block .

    $default  reduce using rule 12 (if_stmt)


State 31

   11 while_stmt: T_while T_openParenthesis expr T_closedParanthesis block .

    $default  reduce using rule 11 (while_stmt)
