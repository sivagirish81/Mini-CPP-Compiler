Terminals unused in grammar

   T_keyword
   T_type
   T_return
   T_else
   T_InputStream
   T_OutputStream
   T_RelationalOperator
   T_LogicalOperator
   T_UnaryOperator
   T_ArithmeticOperator
   T_AssignmentOperator
   T_BitwiseOperator
   T_identifier
   T_numericConstants
   T_stringLiteral
   T_whiteSpace
   '~'
   '^'
   '&'
   '|'
   '+'
   '-'
   '*'
   '/'
   AND
   OR
   NOT
   EQ
   NOTEQ
   GTE
   LTE
   GT
   LT
   INC
   DEC


State 11 conflicts: 5 shift/reduce
State 33 conflicts: 5 shift/reduce
State 34 conflicts: 5 shift/reduce
State 40 conflicts: 5 shift/reduce


Grammar

    0 $accept: Start $end

    1 Start: T_int T_main T_openParenthesis T_closedParanthesis T_openFlowerBracket block

    2 block: T_openFlowerBracket block
    3      | stmt Multiple_stmts T_closedFlowerBracket
    4      | T_closedFlowerBracket
    5      | %empty

    6 Multiple_stmts: stmt Multiple_stmts
    7               | %empty

    8 stmt: T_character T_Semicolon
    9     | if_stmt
   10     | while_stmt
   11     | for_stmt

   12 for_stmt: T_for T_openParenthesis expr T_Semicolon expr T_Semicolon expr T_closedParanthesis block

   13 while_stmt: T_while T_openParenthesis expr T_closedParanthesis block

   14 if_stmt: T_if T_openParenthesis expr T_closedParanthesis block

   15 expr: T_character
   16     | %empty


Terminals, with rules where they appear

$end (0) 0
'&' (38)
'*' (42)
'+' (43)
'-' (45)
'/' (47)
'^' (94)
'|' (124)
'~' (126)
error (256)
T_keyword (258)
T_int (259) 1
T_main (260) 1
T_type (261)
T_return (262)
T_for (263) 12
T_if (264) 14
T_else (265)
T_while (266) 13
T_InputStream (267)
T_OutputStream (268)
T_openParenthesis (269) 1 12 13 14
T_closedParanthesis (270) 1 12 13 14
T_openFlowerBracket (271) 1 2
T_closedFlowerBracket (272) 3 4
T_RelationalOperator (273)
T_LogicalOperator (274)
T_UnaryOperator (275)
T_ArithmeticOperator (276)
T_AssignmentOperator (277)
T_BitwiseOperator (278)
T_Semicolon (279) 8 12
T_identifier (280)
T_numericConstants (281)
T_stringLiteral (282)
T_character (283) 8 15
T_whiteSpace (284)
AND (285)
OR (286)
NOT (287)
EQ (288)
NOTEQ (289)
GTE (290)
LTE (291)
GT (292)
LT (293)
INC (294)
DEC (295)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
Start (50)
    on left: 1, on right: 0
block (51)
    on left: 2 3 4 5, on right: 1 2 12 13 14
Multiple_stmts (52)
    on left: 6 7, on right: 3 6
stmt (53)
    on left: 8 9 10 11, on right: 3 6
for_stmt (54)
    on left: 12, on right: 11
while_stmt (55)
    on left: 13, on right: 10
if_stmt (56)
    on left: 14, on right: 9
expr (57)
    on left: 15 16, on right: 12 13 14


State 0

    0 $accept: . Start $end

    T_int  shift, and go to state 1

    Start  go to state 2


State 1

    1 Start: T_int . T_main T_openParenthesis T_closedParanthesis T_openFlowerBracket block

    T_main  shift, and go to state 3


State 2

    0 $accept: Start . $end

    $end  shift, and go to state 4


State 3

    1 Start: T_int T_main . T_openParenthesis T_closedParanthesis T_openFlowerBracket block

    T_openParenthesis  shift, and go to state 5


State 4

    0 $accept: Start $end .

    $default  accept


State 5

    1 Start: T_int T_main T_openParenthesis . T_closedParanthesis T_openFlowerBracket block

    T_closedParanthesis  shift, and go to state 6


State 6

    1 Start: T_int T_main T_openParenthesis T_closedParanthesis . T_openFlowerBracket block

    T_openFlowerBracket  shift, and go to state 7


State 7

    1 Start: T_int T_main T_openParenthesis T_closedParanthesis T_openFlowerBracket . block

    T_for                  shift, and go to state 8
    T_if                   shift, and go to state 9
    T_while                shift, and go to state 10
    T_openFlowerBracket    shift, and go to state 11
    T_closedFlowerBracket  shift, and go to state 12
    T_character            shift, and go to state 13

    $default  reduce using rule 5 (block)

    block       go to state 14
    stmt        go to state 15
    for_stmt    go to state 16
    while_stmt  go to state 17
    if_stmt     go to state 18


State 8

   12 for_stmt: T_for . T_openParenthesis expr T_Semicolon expr T_Semicolon expr T_closedParanthesis block

    T_openParenthesis  shift, and go to state 19


State 9

   14 if_stmt: T_if . T_openParenthesis expr T_closedParanthesis block

    T_openParenthesis  shift, and go to state 20


State 10

   13 while_stmt: T_while . T_openParenthesis expr T_closedParanthesis block

    T_openParenthesis  shift, and go to state 21


State 11

    2 block: T_openFlowerBracket . block

    T_for                  shift, and go to state 8
    T_if                   shift, and go to state 9
    T_while                shift, and go to state 10
    T_openFlowerBracket    shift, and go to state 11
    T_closedFlowerBracket  shift, and go to state 12
    T_character            shift, and go to state 13

    T_for                  [reduce using rule 5 (block)]
    T_if                   [reduce using rule 5 (block)]
    T_while                [reduce using rule 5 (block)]
    T_closedFlowerBracket  [reduce using rule 5 (block)]
    T_character            [reduce using rule 5 (block)]
    $default               reduce using rule 5 (block)

    block       go to state 22
    stmt        go to state 15
    for_stmt    go to state 16
    while_stmt  go to state 17
    if_stmt     go to state 18


State 12

    4 block: T_closedFlowerBracket .

    $default  reduce using rule 4 (block)


State 13

    8 stmt: T_character . T_Semicolon

    T_Semicolon  shift, and go to state 23


State 14

    1 Start: T_int T_main T_openParenthesis T_closedParanthesis T_openFlowerBracket block .

    $default  reduce using rule 1 (Start)


State 15

    3 block: stmt . Multiple_stmts T_closedFlowerBracket

    T_for        shift, and go to state 8
    T_if         shift, and go to state 9
    T_while      shift, and go to state 10
    T_character  shift, and go to state 13

    $default  reduce using rule 7 (Multiple_stmts)

    Multiple_stmts  go to state 24
    stmt            go to state 25
    for_stmt        go to state 16
    while_stmt      go to state 17
    if_stmt         go to state 18


State 16

   11 stmt: for_stmt .

    $default  reduce using rule 11 (stmt)


State 17

   10 stmt: while_stmt .

    $default  reduce using rule 10 (stmt)


State 18

    9 stmt: if_stmt .

    $default  reduce using rule 9 (stmt)


State 19

   12 for_stmt: T_for T_openParenthesis . expr T_Semicolon expr T_Semicolon expr T_closedParanthesis block

    T_character  shift, and go to state 26

    $default  reduce using rule 16 (expr)

    expr  go to state 27


State 20

   14 if_stmt: T_if T_openParenthesis . expr T_closedParanthesis block

    T_character  shift, and go to state 26

    $default  reduce using rule 16 (expr)

    expr  go to state 28


State 21

   13 while_stmt: T_while T_openParenthesis . expr T_closedParanthesis block

    T_character  shift, and go to state 26

    $default  reduce using rule 16 (expr)

    expr  go to state 29


State 22

    2 block: T_openFlowerBracket block .

    $default  reduce using rule 2 (block)


State 23

    8 stmt: T_character T_Semicolon .

    $default  reduce using rule 8 (stmt)


State 24

    3 block: stmt Multiple_stmts . T_closedFlowerBracket

    T_closedFlowerBracket  shift, and go to state 30


State 25

    6 Multiple_stmts: stmt . Multiple_stmts

    T_for        shift, and go to state 8
    T_if         shift, and go to state 9
    T_while      shift, and go to state 10
    T_character  shift, and go to state 13

    $default  reduce using rule 7 (Multiple_stmts)

    Multiple_stmts  go to state 31
    stmt            go to state 25
    for_stmt        go to state 16
    while_stmt      go to state 17
    if_stmt         go to state 18


State 26

   15 expr: T_character .

    $default  reduce using rule 15 (expr)


State 27

   12 for_stmt: T_for T_openParenthesis expr . T_Semicolon expr T_Semicolon expr T_closedParanthesis block

    T_Semicolon  shift, and go to state 32


State 28

   14 if_stmt: T_if T_openParenthesis expr . T_closedParanthesis block

    T_closedParanthesis  shift, and go to state 33


State 29

   13 while_stmt: T_while T_openParenthesis expr . T_closedParanthesis block

    T_closedParanthesis  shift, and go to state 34


State 30

    3 block: stmt Multiple_stmts T_closedFlowerBracket .

    $default  reduce using rule 3 (block)


State 31

    6 Multiple_stmts: stmt Multiple_stmts .

    $default  reduce using rule 6 (Multiple_stmts)


State 32

   12 for_stmt: T_for T_openParenthesis expr T_Semicolon . expr T_Semicolon expr T_closedParanthesis block

    T_character  shift, and go to state 26

    $default  reduce using rule 16 (expr)

    expr  go to state 35


State 33

   14 if_stmt: T_if T_openParenthesis expr T_closedParanthesis . block

    T_for                  shift, and go to state 8
    T_if                   shift, and go to state 9
    T_while                shift, and go to state 10
    T_openFlowerBracket    shift, and go to state 11
    T_closedFlowerBracket  shift, and go to state 12
    T_character            shift, and go to state 13

    T_for                  [reduce using rule 5 (block)]
    T_if                   [reduce using rule 5 (block)]
    T_while                [reduce using rule 5 (block)]
    T_closedFlowerBracket  [reduce using rule 5 (block)]
    T_character            [reduce using rule 5 (block)]

    block       go to state 36
    stmt        go to state 15
    for_stmt    go to state 16
    while_stmt  go to state 17
    if_stmt     go to state 18


State 34

   13 while_stmt: T_while T_openParenthesis expr T_closedParanthesis . block

    T_for                  shift, and go to state 8
    T_if                   shift, and go to state 9
    T_while                shift, and go to state 10
    T_openFlowerBracket    shift, and go to state 11
    T_closedFlowerBracket  shift, and go to state 12
    T_character            shift, and go to state 13

    T_for                  [reduce using rule 5 (block)]
    T_if                   [reduce using rule 5 (block)]
    T_while                [reduce using rule 5 (block)]
    T_closedFlowerBracket  [reduce using rule 5 (block)]
    T_character            [reduce using rule 5 (block)]

    block       go to state 37
    stmt        go to state 15
    for_stmt    go to state 16
    while_stmt  go to state 17
    if_stmt     go to state 18


State 35

   12 for_stmt: T_for T_openParenthesis expr T_Semicolon expr . T_Semicolon expr T_closedParanthesis block

    T_Semicolon  shift, and go to state 38


State 36

   14 if_stmt: T_if T_openParenthesis expr T_closedParanthesis block .

    $default  reduce using rule 14 (if_stmt)


State 37

   13 while_stmt: T_while T_openParenthesis expr T_closedParanthesis block .

    $default  reduce using rule 13 (while_stmt)


State 38

   12 for_stmt: T_for T_openParenthesis expr T_Semicolon expr T_Semicolon . expr T_closedParanthesis block

    T_character  shift, and go to state 26

    $default  reduce using rule 16 (expr)

    expr  go to state 39


State 39

   12 for_stmt: T_for T_openParenthesis expr T_Semicolon expr T_Semicolon expr . T_closedParanthesis block

    T_closedParanthesis  shift, and go to state 40


State 40

   12 for_stmt: T_for T_openParenthesis expr T_Semicolon expr T_Semicolon expr T_closedParanthesis . block

    T_for                  shift, and go to state 8
    T_if                   shift, and go to state 9
    T_while                shift, and go to state 10
    T_openFlowerBracket    shift, and go to state 11
    T_closedFlowerBracket  shift, and go to state 12
    T_character            shift, and go to state 13

    T_for                  [reduce using rule 5 (block)]
    T_if                   [reduce using rule 5 (block)]
    T_while                [reduce using rule 5 (block)]
    T_closedFlowerBracket  [reduce using rule 5 (block)]
    T_character            [reduce using rule 5 (block)]

    block       go to state 41
    stmt        go to state 15
    for_stmt    go to state 16
    while_stmt  go to state 17
    if_stmt     go to state 18


State 41

   12 for_stmt: T_for T_openParenthesis expr T_Semicolon expr T_Semicolon expr T_closedParanthesis block .

    $default  reduce using rule 12 (for_stmt)
